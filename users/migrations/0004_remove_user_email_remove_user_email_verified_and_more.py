# Generated by Django 5.1.5 on 2025-01-19 21:40

from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

import users.models


def migrate_display_name_to_username(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Fill each user.username with user.display_name but modified to fit the validator.
    """
    User = apps.get_model("users", "User")

    for user in User.objects.all():
        display_name = user.display_name
        # Modify display_name to fit the validator
        username = display_name.replace(" ", "_").replace(".", "_")
        user.username = username
        user.save(update_fields=["username"])


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0003_user_bio"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="user",
            name="email",
        ),
        migrations.RemoveField(
            model_name="user",
            name="email_verified",
        ),
        migrations.AddField(
            model_name="user",
            name="username",
            field=models.CharField(
                blank=True,
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 150 characters or fewer. Letters, digits and -/_ only.",
                max_length=150,
                null=True,
                unique=True,
                validators=[users.models.UsernameValidator()],
                verbose_name="username",
            ),
        ),
        migrations.RunPython(migrate_display_name_to_username, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="user",
            name="display_name",
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 150 characters or fewer. Letters, digits and -/_ only.",
                max_length=150,
                unique=True,
                validators=[users.models.UsernameValidator()],
                verbose_name="username",
            ),
        ),
    ]
