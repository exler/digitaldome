# Generated by Django 4.2.3 on 2023-08-31 04:15

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import entities.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genres",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Show",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                (
                    "genres",
                    models.ManyToManyField(related_name="+", to="entities.genre"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=entities.models.cover_upload_target,
                    ),
                ),
                ("length", models.PositiveSmallIntegerField()),
                (
                    "director",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), size=None
                    ),
                ),
                (
                    "cast",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), size=None
                    ),
                ),
                (
                    "genres",
                    models.ManyToManyField(related_name="+", to="entities.genre"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=entities.models.cover_upload_target,
                    ),
                ),
                (
                    "platforms",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveSmallIntegerField(
                            choices=[
                                (10, "PC"),
                                (20, "PS3"),
                                (21, "PS4"),
                                (22, "PS5"),
                                (30, "Xbox 360"),
                                (31, "Xbox One"),
                                (40, "Nintendo Switch"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                (
                    "genres",
                    models.ManyToManyField(related_name="+", to="entities.genre"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Episode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                ("season", models.PositiveSmallIntegerField()),
                ("number", models.PositiveSmallIntegerField()),
                (
                    "genres",
                    models.ManyToManyField(related_name="+", to="entities.genre"),
                ),
                (
                    "show",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="episodes",
                        to="entities.show",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=entities.models.cover_upload_target,
                    ),
                ),
                (
                    "authors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), size=None
                    ),
                ),
                ("pages", models.PositiveSmallIntegerField()),
                ("isbn", models.CharField(max_length=17)),
                (
                    "genres",
                    models.ManyToManyField(related_name="+", to="entities.genre"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
